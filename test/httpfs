#!/bin/bash

clear

PORT="8080"
DIR="test"
FILES="files"

# reset test files
rm -rf $DIR/$FILES/*

export TRANSPORT_PROTOCOL="$1"
export ROUTER_PORT="3004"

if [[ "$TRANSPORT_PROTOCOL" == "udp" ]]; then
    rm -f ./router.log
    ./test/router --port=$ROUTER_PORT --drop-rate=0.0 --max-delay=123ms --seed=$RANDOM &>/dev/null &
elif [[ "$TRANSPORT_PROTOCOL" != "tcp" ]]; then
    echo "Transport protocol not specified (tcp, udp)"
    exit 1
fi

echo "[[$TRANSPORT_PROTOCOL]]"

function httpfs {
    bin=/tmp/httpfs
    go build -o $bin ./httpfs/*.go
    echo -e "\n\e[1;34mhttpfs $@\e[0m"
    $bin "$@" &
    rm $bin
    sleep 0.1
    echo
}

function httpc {
    echo -e "\e[1;35mhttpc $@\e[0m" | tr -d '\n'
    echo -e "\n"
    go run ./httpc/*.go "$@"
    echo
}

function cleanup {
    kill $(jobs -p) &>/dev/null
}

trap cleanup EXIT

# start httpfs in test directory
httpfs -v -d $DIR -p $PORT

sleep 0.3

# simple list
httpc get -v http://localhost:$PORT/

exit 0

# sub-directory list
touch $DIR/$FILES/test000
httpc get -v http://localhost:$PORT/$FILES/

# list non-directory file
httpc get -v http://localhost:$PORT/data.json/

# list missing file
httpc get -v http://localhost:$PORT/missing/

# list a parent directory
httpc get -v http://localhost:$PORT/../files/

# simple read
httpc get -v http://localhost:$PORT/data.json

# read missing file
httpc get -v http://localhost:$PORT/missing.txt

# read in parent directory
httpc get -v http://localhost:$PORT/../data.json

# simple write
httpc post -v -d $'001\n' http://localhost:$PORT/$FILES/test001

# write over file
echo "000" >> $DIR/$FILES/test000
httpc post -v -d $'00x\n' http://localhost:$PORT/$FILES/test000

# write to directory path
mkdir $DIR/$FILES/testDir
httpc post -v -d $'test\n' http://localhost:$PORT/$FILES/testDir
